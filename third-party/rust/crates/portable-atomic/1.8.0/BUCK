load("@prelude//rust:cargo_package.bzl", "cargo")

# This BUCK file is for the portable-atomic crate
# It provides portable atomic types including support for 128-bit atomics and atomic float
# The build script is included to handle different target architectures and features
cargo.rust_library(
    name = "portable-atomic",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",  # Include root .rs files for the build script
        "README.md",  # Include README.md directly in srcs
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = ["default"],
    deps = [],
    env = {
        # Environment variables that might be needed by the build script
        "CARGO_PKG_NAME": "portable-atomic",
    },
    rustc_flags = [
        # Add rustc flags that might be needed based on the build script
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
    ],
)

# Additional targets for different feature combinations
cargo.rust_library(
    name = "portable-atomic-std",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",
        "README.md",
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = ["std"],
    deps = [],
    env = {
        "CARGO_PKG_NAME": "portable-atomic",
    },
    rustc_flags = [
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
    ],
)

cargo.rust_library(
    name = "portable-atomic-float",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",
        "README.md",
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = ["float"],
    deps = [],
    env = {
        "CARGO_PKG_NAME": "portable-atomic",
    },
    rustc_flags = [
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
    ],
)

cargo.rust_library(
    name = "portable-atomic-serde",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",
        "README.md",
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = ["serde"],
    deps = [
        "//third-party/rust/crates/serde/1.0.60:serde",
    ],
    env = {
        "CARGO_PKG_NAME": "portable-atomic",
    },
    rustc_flags = [
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
    ],
)

cargo.rust_library(
    name = "portable-atomic-critical-section",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",
        "README.md",
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = ["critical-section"],
    deps = [
        "//third-party/rust/crates/critical-section/1:critical-section",
    ],
    env = {
        "CARGO_PKG_NAME": "portable-atomic",
    },
    rustc_flags = [
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
    ],
)

cargo.rust_library(
    name = "portable-atomic-unsafe-assume-single-core",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",
        "README.md",
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = ["unsafe-assume-single-core"],
    deps = [],
    env = {
        "CARGO_PKG_NAME": "portable-atomic",
        # Indicate that we're using the unsafe-assume-single-core feature
        "CARGO_FEATURE_UNSAFE_ASSUME_SINGLE_CORE": "1",
    },
    rustc_flags = [
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
        "--cfg=portable_atomic_unsafe_assume_single_core",
    ],
)

cargo.rust_library(
    name = "portable-atomic-s-mode",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",
        "README.md",
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = ["s-mode"],
    deps = [],
    env = {
        "CARGO_PKG_NAME": "portable-atomic",
        # Indicate that we're using the s-mode feature
        "CARGO_FEATURE_S_MODE": "1",
    },
    rustc_flags = [
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
        "--cfg=portable_atomic_s_mode",
    ],
)

cargo.rust_library(
    name = "portable-atomic-force-amo",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",
        "README.md",
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = ["force-amo"],
    deps = [],
    env = {
        "CARGO_PKG_NAME": "portable-atomic",
        # Indicate that we're using the force-amo feature
        "CARGO_FEATURE_FORCE_AMO": "1",
    },
    rustc_flags = [
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
        "--cfg=portable_atomic_force_amo",
    ],
)

cargo.rust_library(
    name = "portable-atomic-disable-fiq",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",
        "README.md",
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = ["disable-fiq"],
    deps = [],
    env = {
        "CARGO_PKG_NAME": "portable-atomic",
        # Indicate that we're using the disable-fiq feature
        "CARGO_FEATURE_DISABLE_FIQ": "1",
    },
    rustc_flags = [
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
        "--cfg=portable_atomic_disable_fiq",
    ],
)

# Combined features target
cargo.rust_library(
    name = "portable-atomic-all-features",
    edition = "2021",
    srcs = glob([
        "src/**/*.rs",
        "*.rs",
        "README.md",
    ]),
    crate_root = "src/lib.rs",
    visibility = ["PUBLIC"],
    features = [
        "default",
        "std",
        "float",
        "serde",
        "critical-section",
    ],
    deps = [
        "//third-party/rust/crates/serde/1.0.60:serde",
        "//third-party/rust/crates/critical-section/1:critical-section",
    ],
    env = {
        "CARGO_PKG_NAME": "portable-atomic",
        "CARGO_FEATURE_STD": "1",
        "CARGO_FEATURE_FLOAT": "1",
        "CARGO_FEATURE_SERDE": "1",
        "CARGO_FEATURE_CRITICAL_SECTION": "1",
    },
    rustc_flags = [
        "--cfg=portable_atomic_target_feature=\"cmpxchg16b\"",
    ],
)
