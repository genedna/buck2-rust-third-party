load("@prelude//rust:cargo_package.bzl", "cargo")

# Define available features based on Cargo.toml features
FEATURES = {
    "debug": [],
    "default": ["legacy", "zdict_builder"],
    "experimental": [],
    "fat-lto": [],
    "legacy": [],
    "no_asm": [],
    "no_wasm_shim": [],
    "non-cargo": [],
    "pkg-config": [],
    "std": [],
    "thin": [],
    "thin-lto": [],
    "zdict_builder": [],
    "zstdmt": [],
}

# The main zstd-sys Rust library
cargo.rust_library(
    name = "zstd-sys",
    srcs = glob([
        "src/**/*.rs",
    ]),
    crate_root = "src/lib.rs",
    edition = "2018",
    rustc_flags = [
        "--cap-lints=warn",
        "-Ccodegen-units=1",
    ],
    features = FEATURES["default"],  # Use default features
    deps = [
        "//third-party/rust/crates/libc/0.2.169:libc",
    ],
    env = {
        # Environment variables that would typically be set by build.rs
        "CARGO_FEATURE_DEFAULT": "1",
        "CARGO_FEATURE_LEGACY": "1",
        "CARGO_FEATURE_ZDICT_BUILDER": "1",
    },
    visibility = ["PUBLIC"],
)

# Create targets for each feature combination
cargo.rust_library(
    name = "zstd-sys-experimental",
    srcs = glob([
        "src/**/*.rs",
    ]),
    crate_root = "src/lib.rs",
    edition = "2018",
    rustc_flags = [
        "--cap-lints=warn",
        "-Ccodegen-units=1",
    ],
    features = FEATURES["default"] + ["experimental"],
    deps = [
        "//third-party/rust/crates/libc/0.2.169:libc",
    ],
    env = {
        "CARGO_FEATURE_DEFAULT": "1",
        "CARGO_FEATURE_LEGACY": "1",
        "CARGO_FEATURE_ZDICT_BUILDER": "1",
        "CARGO_FEATURE_EXPERIMENTAL": "1",
    },
    visibility = ["PUBLIC"],
)
